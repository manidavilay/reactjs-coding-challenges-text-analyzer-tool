{"ast":null,"code":"var _jsxFileName = \"/Users/manidavilay/Documents/Projets/practical-reactjs-coding-challenges/text-analyzer-tool/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.scss';\nimport BottomResultBox from './components/BottomResultBox';\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\nimport ResultBox from './components/ResultBox';\nimport TextArea from './components/TextArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [wordsCount, setWordsCount] = useState(0);\n  const [charactersCount, setCharactersCount] = useState(0);\n  const [sentencesCount, setSentencesCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"small-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-app\",\n        children: [/*#__PURE__*/_jsxDEV(ResultBox, {\n          wordsCount: wordsCount,\n          charactersCount: charactersCount,\n          sentencesCount: sentencesCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          wordsCount: wordsCount,\n          setWordsCount: setWordsCount,\n          charactersCount: charactersCount,\n          setCharactersCount: setCharactersCount,\n          sentencesCount: sentencesCount,\n          setSentencesCount: setSentencesCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BottomResultBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"DiLTQ5Bz9P3VDEGrM0x8zGkzX0Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","BottomResultBox","Footer","Navbar","ResultBox","TextArea","App","wordsCount","setWordsCount","charactersCount","setCharactersCount","sentencesCount","setSentencesCount"],"sources":["/Users/manidavilay/Documents/Projets/practical-reactjs-coding-challenges/text-analyzer-tool/src/App.tsx"],"sourcesContent":["import { useState } from 'react'\nimport './App.scss'\nimport BottomResultBox from './components/BottomResultBox'\nimport Footer from './components/Footer'\nimport Navbar from './components/Navbar'\nimport ResultBox from './components/ResultBox'\nimport TextArea from './components/TextArea'\n\nconst App = () => {\n  const [wordsCount, setWordsCount] = useState<number | undefined>(0);\n  const [charactersCount, setCharactersCount] = useState<number | undefined>(0);\n  const [sentencesCount, setSentencesCount] = useState<number | undefined>(0);\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"small-container\">\n        <div className=\"main-app\">\n          <ResultBox wordsCount={wordsCount} charactersCount={charactersCount} sentencesCount={sentencesCount} />\n          <TextArea wordsCount={wordsCount} setWordsCount={setWordsCount} charactersCount={charactersCount} setCharactersCount={setCharactersCount} sentencesCount={sentencesCount} setSentencesCount={setSentencesCount} />\n          <BottomResultBox />\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,YAAY;AACnB,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAA;AAAA;AAE5C,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAqB,CAAC,CAAC;EACnE,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAqB,CAAC,CAAC;EAC7E,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAqB,CAAC,CAAC;EAE3E,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,SAAS,EAAC,iBAAiB;MAAA,uBAC9B;QAAK,SAAS,EAAC,UAAU;QAAA,wBACvB,QAAC,SAAS;UAAC,UAAU,EAAEO,UAAW;UAAC,eAAe,EAAEE,eAAgB;UAAC,cAAc,EAAEE;QAAe;UAAA;UAAA;UAAA;QAAA,QAAG,eACvG,QAAC,QAAQ;UAAC,UAAU,EAAEJ,UAAW;UAAC,aAAa,EAAEC,aAAc;UAAC,eAAe,EAAEC,eAAgB;UAAC,kBAAkB,EAAEC,kBAAmB;UAAC,cAAc,EAAEC,cAAe;UAAC,iBAAiB,EAAEC;QAAkB;UAAA;UAAA;UAAA;QAAA,QAAG,eAClN,QAAC,eAAe;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACf;MAAA;MAAA;MAAA;IAAA,QACF,eACN,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAEP,CAAC;AAAA,GAlBKN,GAAG;AAAA,KAAHA,GAAG;AAoBT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}