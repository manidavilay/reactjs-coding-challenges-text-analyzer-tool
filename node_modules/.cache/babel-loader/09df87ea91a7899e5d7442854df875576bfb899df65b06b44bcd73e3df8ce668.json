{"ast":null,"code":"var _jsxFileName = \"/Users/manidavilay/Documents/Projets/practical-reactjs-coding-challenges/text-analyzer-tool/src/components/TextArea/index.tsx\",\n  _s = $RefreshSig$();\nimport { useRef } from 'react';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextArea = _ref => {\n  _s();\n  let {\n    wordsCount,\n    setWordsCount,\n    charactersCount,\n    setCharactersCount\n  } = _ref;\n  const textAreaRef = useRef(null);\n  const handleTextAreaChange = () => {\n    var _textAreaRef$current;\n    const textValue = (_textAreaRef$current = textAreaRef.current) === null || _textAreaRef$current === void 0 ? void 0 : _textAreaRef$current.value;\n    const wordsCountValue = (textValue === null || textValue === void 0 ? void 0 : textValue.trim()) && (textValue === null || textValue === void 0 ? void 0 : textValue.split(/\\s+(?=\\S)/).length) || 0;\n    const charactersCountValue = textValue === null || textValue === void 0 ? void 0 : textValue.split(\"\").length;\n    const sentencesCountValue = textValue === null || textValue === void 0 ? void 0 : textValue.trim().split(/[.?!]+(?=\\S)/).length;\n    console.log(111, sentencesCountValue);\n    setWordsCount(wordsCountValue);\n    setCharactersCount(charactersCountValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    className: \"text-area\",\n    placeholder: \"Paste your text here...\",\n    autoFocus: true,\n    onChange: handleTextAreaChange,\n    ref: textAreaRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n_s(TextArea, \"BYbRnLSQDOLW5pbx+V/xItG+Mbw=\");\n_c = TextArea;\nexport default TextArea;\nvar _c;\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"names":["useRef","TextArea","wordsCount","setWordsCount","charactersCount","setCharactersCount","textAreaRef","handleTextAreaChange","textValue","current","value","wordsCountValue","trim","split","length","charactersCountValue","sentencesCountValue","console","log"],"sources":["/Users/manidavilay/Documents/Projets/practical-reactjs-coding-challenges/text-analyzer-tool/src/components/TextArea/index.tsx"],"sourcesContent":["import { useRef } from 'react'\nimport './index.scss'\n\ninterface Props {\n  wordsCount: number | undefined\n  setWordsCount: (value: number | undefined) => void\n  charactersCount: number | undefined\n  setCharactersCount: (value: number | undefined) => void\n}\n\nconst TextArea = ({ wordsCount, setWordsCount, charactersCount, setCharactersCount }: Props) => {\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleTextAreaChange = () => {\n    const textValue = textAreaRef.current?.value\n    const wordsCountValue = (textValue?.trim() && textValue?.split(/\\s+(?=\\S)/).length) || 0\n    const charactersCountValue = textValue?.split(\"\").length\n    const sentencesCountValue = textValue?.trim().split(/[.?!]+(?=\\S)/).length\n    console.log(111, sentencesCountValue)\n    setWordsCount(wordsCountValue)\n    setCharactersCount(charactersCountValue)\n  }\n\n  return <textarea className=\"text-area\" placeholder=\"Paste your text here...\" autoFocus onChange={handleTextAreaChange} ref={textAreaRef} />\n}\n\nexport default TextArea\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAO,cAAc;AAAA;AASrB,MAAMC,QAAQ,GAAG,QAA+E;EAAA;EAAA,IAA9E;IAAEC,UAAU;IAAEC,aAAa;IAAEC,eAAe;IAAEC;EAA0B,CAAC;EACzF,MAAMC,WAAW,GAAGN,MAAM,CAAsB,IAAI,CAAC;EAErD,MAAMO,oBAAoB,GAAG,MAAM;IAAA;IACjC,MAAMC,SAAS,2BAAGF,WAAW,CAACG,OAAO,yDAAnB,qBAAqBC,KAAK;IAC5C,MAAMC,eAAe,GAAI,CAAAH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEI,IAAI,EAAE,MAAIJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEK,KAAK,CAAC,WAAW,CAAC,CAACC,MAAM,KAAK,CAAC;IACxF,MAAMC,oBAAoB,GAAGP,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEK,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM;IACxD,MAAME,mBAAmB,GAAGR,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEI,IAAI,EAAE,CAACC,KAAK,CAAC,cAAc,CAAC,CAACC,MAAM;IAC1EG,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEF,mBAAmB,CAAC;IACrCb,aAAa,CAACQ,eAAe,CAAC;IAC9BN,kBAAkB,CAACU,oBAAoB,CAAC;EAC1C,CAAC;EAED,oBAAO;IAAU,SAAS,EAAC,WAAW;IAAC,WAAW,EAAC,yBAAyB;IAAC,SAAS;IAAC,QAAQ,EAAER,oBAAqB;IAAC,GAAG,EAAED;EAAY;IAAA;IAAA;IAAA;EAAA,QAAG;AAC7I,CAAC;AAAA,GAdKL,QAAQ;AAAA,KAARA,QAAQ;AAgBd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}